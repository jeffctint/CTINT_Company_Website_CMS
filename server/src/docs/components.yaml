components:
  schemas:
    Interaction:
      type: object
      properties:
        interactionId:
          type: string
        caseId:
          type: string
      example:
        interactionId: '5ebac534954b54139806c112'
        caseId: '00000001'
    InteractionSearch:
      type: object
      properties:
        searchInput:
          type: string
        startDate:
          type: string
          required: true
        endDate:
          type: string
          required: true
        pageIndex:
          type: string
          required: true
        pageSize:
          type: string
          required: true
      example:
        searchInput: 'test subject'
        startDate: '2023-03-01T00:00:00.000Z'
        endDate: '2023-03-30T00:00:00.000Z'
        pageIndex: 1
        pageSize: 25
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg'
        expires: '2020-01-01T00:00:00.000Z'
    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
  parameters:
    GcUserId:
      in: header
      name: gc-user-id
      type: string
      required: true
      example: '9ef8cddb-7ec2-45bf-868f-4ecdad6a5496'
    GcUserName:
      in: header
      name: gc-user-name
      type: string
      required: true
      example: 'Developer 2'
    GcUserEmail:
      in: header
      name: gc-user-email
      type: string
      required: true
      example: 'gc_dev2@ctint.com'
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Bad Request
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Unauthorized Access
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            errorMessage: Not Found
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
